name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  integration-test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
    - uses: actions/checkout@v2
    - uses: engineerd/setup-kind@v0.4.0
      with:
        version: v0.8.1
    - name: Setup fluxctl # Following steps are based on fluxctl-action docs
      uses: fluxcd/fluxctl-action@v1.19.0
    - name: Install Flux
      run: |
        kubectl create ns flux
        fluxctl install \
        --git-path=envs/kind \
        --git-branch=${GITHUB_REF#refs/heads/} \
        --git-readonly=true \
        --registry-disable-scanning=true \
        --git-email=invalid@scs.community \
        --git-url=https://github.com/$GITHUB_REPOSITORY.git \
        --manifest-generation=true \
        --namespace=flux | kubectl apply -f -
    - name: Verify install
      run: kubectl -n flux rollout status deploy/flux --timeout=1m
    - name: Sync git with cluster
      env:
        FLUX_FORWARD_NAMESPACE: flux
      run: fluxctl sync
    - name: Wait for minio to be Ready
      run: |
        until [[ "$(kubectl get minioinstance minio '--output=go-template={{.status.currentState}}')" = "Ready" ]]
        do
          sleep 1
        done
        until [[ "$(kubectl get statefulset minio '--output=go-template={{.status.readyReplicas}}')" = "1" ]]
        do
          sleep 1
        done
    - name: Check if service is working as expected
      run: |
        kubectl run -i --restart=Never health-check --rm --image=minio/mc --command -- sh -c '
        set -ex
        mc config host add test-minio http://minio-service:9000 minio minio123
        mc mb test
        INPUT="Hello from object storage"
        echo -n "$INPUT" | mc pipe minio-test/test/object001
        OUTPUT="$(mc cat minio-test/test/object001)somemoredata"
        [[ "$OUTPUT" = "$INPUT" ]] || exit 1'
    - name: Fetch fluxcd logs
      if: ${{ always() }}
      run: kubectl logs -n flux deploy/flux
